{"version":3,"sources":["js/parallax.js"],"names":["$","$window","window","windowHeight","height","resize","fn","parallax","xpos","speedFactor","outerHeight","$this","getHeight","firstTop","update","pos","scrollTop","each","$element","top","offset","css","Math","round","jqo","arguments","length","bind","jQuery"],"mappings":";CAaA,SAAWA,GACNC,IAAAA,EAAUD,EAAEE,QACZC,EAAeF,EAAQG,SAE3BH,EAAQI,OAAO,WACdF,EAAeF,EAAQG,WAGxBJ,EAAEM,GAAGC,SAAW,SAASC,EAAMC,EAAaC,GACvCC,IACAC,EACAC,EAFAF,EAAQX,EAAE,MA0BLc,SAAAA,IACJC,IAAAA,EAAMd,EAAQe,YAElBL,EAAMM,KAAK,WACNC,IAAAA,EAAWlB,EAAE,MACbmB,EAAMD,EAASE,SAASD,IAIxBA,EAHSP,EAAUM,GAGJH,GAAOI,EAAMJ,EAAMZ,GAItCQ,EAAMU,IAAI,qBAAsBb,EAAO,IAAMc,KAAKC,OAAOV,EAAWE,GAAON,GAAe,QAjC5FE,EAAMM,KAAK,WACPJ,EAAWF,EAAMS,SAASD,MAI7BP,EADGF,EACS,SAASc,GACbA,OAAAA,EAAId,aAAY,IAGZ,SAASc,GACbA,OAAAA,EAAIpB,WAKTqB,UAAUC,OAAS,GAAc,OAATlB,KAAeA,EAAO,QAC9CiB,UAAUC,OAAS,GAAqB,OAAhBjB,KAAsBA,EAAc,KAC5DgB,UAAUC,OAAS,GAAqB,OAAhBhB,KAAsBA,GAAc,GAoBhET,EAAQ0B,KAAK,SAAUb,GAAQT,OAAOS,GACtCA,KArDF,CAuDGc","file":"parallax.b8312480.js","sourceRoot":"..","sourcesContent":["/*\r\nPlugin: jQuery Parallax\r\nVersion 1.1.3\r\nAuthor: Ian Lunn\r\nTwitter: @IanLunn\r\nAuthor URL: http://www.ianlunn.co.uk/\r\nPlugin URL: http://www.ianlunn.co.uk/plugins/jquery-parallax/\r\n\r\nDual licensed under the MIT and GPL licenses:\r\nhttp://www.opensource.org/licenses/mit-license.php\r\nhttp://www.gnu.org/licenses/gpl.html\r\n*/\r\n\r\n(function( $ ){\r\n\tvar $window = $(window);\r\n\tvar windowHeight = $window.height();\r\n\r\n\t$window.resize(function () {\r\n\t\twindowHeight = $window.height();\r\n\t});\r\n\r\n\t$.fn.parallax = function(xpos, speedFactor, outerHeight) {\r\n\t\tvar $this = $(this);\r\n\t\tvar getHeight;\r\n\t\tvar firstTop;\r\n\t\tvar paddingTop = 0;\r\n\t\t\r\n\t\t//get the starting position of each element to have parallax applied to it\t\t\r\n\t\t$this.each(function(){\r\n\t\t    firstTop = $this.offset().top;\r\n\t\t});\r\n\r\n\t\tif (outerHeight) {\r\n\t\t\tgetHeight = function(jqo) {\r\n\t\t\t\treturn jqo.outerHeight(true);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tgetHeight = function(jqo) {\r\n\t\t\t\treturn jqo.height();\r\n\t\t\t};\r\n\t\t}\r\n\t\t\t\r\n\t\t// setup defaults if arguments aren't specified\r\n\t\tif (arguments.length < 1 || xpos === null) xpos = \"50%\";\r\n\t\tif (arguments.length < 2 || speedFactor === null) speedFactor = 0.1;\r\n\t\tif (arguments.length < 3 || outerHeight === null) outerHeight = true;\r\n\t\t\r\n\t\t// function to be called whenever the window is scrolled or resized\r\n\t\tfunction update(){\r\n\t\t\tvar pos = $window.scrollTop();\t\t\t\t\r\n\r\n\t\t\t$this.each(function(){\r\n\t\t\t\tvar $element = $(this);\r\n\t\t\t\tvar top = $element.offset().top;\r\n\t\t\t\tvar height = getHeight($element);\r\n\r\n\t\t\t\t// Check if totally above or totally below viewport\r\n\t\t\t\tif (top + height < pos || top > pos + windowHeight) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$this.css('backgroundPosition', xpos + \" \" + Math.round((firstTop - pos) * speedFactor) + \"px\");\r\n\t\t\t});\r\n\t\t}\t\t\r\n\r\n\t\t$window.bind('scroll', update).resize(update);\r\n\t\tupdate();\r\n\t};\r\n})(jQuery);"]}